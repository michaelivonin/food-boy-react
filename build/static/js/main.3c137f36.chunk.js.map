{"version":3,"sources":["components/User/User.js","components/Order/Order.js","components/History/History.js","FoodBoy.js","serviceWorker.js","index.js"],"names":["User","className","alt","name","label","onChange","e","props","onVariant2Change","onEverythingChange","href","React","Component","TelInput","mask","maskChar","value","inputProps","type","floatingLabel","required","Order","defaultValue","this","showAll","variant2","id","md","xs","size","variant","form","min","rows","color","History","header","headerClass","FoodBoy","handleVariant2Change","bind","handleEverythingChange","state","isVariant2","setState","target","checked","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c137f36.chunk.js","sourcesContent":["import React from 'react';\r\nimport Dropdown, { DropdownTrigger, DropdownContent } from 'react-simple-dropdown';\r\nimport Checkbox from 'muicss/lib/react/checkbox';\r\nimport './User.sass';\r\n\r\nclass User extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dropdown className=\"account-dropdown\">\r\n        <DropdownTrigger>\r\n          <img className=\"account-dropdown__avatar\" alt=\"\"/>\r\n          <span className=\"account-dropdown__name\">Халиф Доставка</span>\r\n        </DropdownTrigger>\r\n        <DropdownContent>\r\n          <div className=\"account-dropdown__identity account-dropdown__segment\">\r\n            Вошли как <strong>User#</strong>\r\n          </div>\r\n          <ul className=\"account-dropdown__quick-links account-dropdown__segment\">\r\n            <li className=\"account-dropdown__link\">\r\n              <Checkbox name=\"inputA2\" label=\"Вариант 2\" onChange={(e) => this.props.onVariant2Change(e)} />\r\n            </li>\r\n            <li className=\"account-dropdown__link\">\r\n              <Checkbox name=\"inputA2\" label=\"Показать всё\" onChange={(e) => this.props.onEverythingChange(e)} />\r\n            </li>\r\n          </ul>\r\n          <ul className=\"account-dropdown__management-links account-dropdown__segment\">\r\n            <li className=\"account-dropdown__link\">\r\n              <a className=\"account-dropdown__link__anchor\" href=\"http://foodboy.ru/logout/?next=/\">\r\n                Выход\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </DropdownContent>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport './Order.sass';\r\nimport Option from 'muicss/lib/react/option';\r\nimport Select from 'muicss/lib/react/select';\r\nimport Row from 'muicss/lib/react/row';\r\nimport Col from 'muicss/lib/react/col';\r\nimport Input from 'muicss/lib/react/input';\r\nimport InputMask from 'react-input-mask';\r\nimport Button from 'muicss/lib/react/button';\r\nimport Textarea from 'muicss/lib/react/textarea';\r\n\r\nconst TelInput = (props) => (\r\n  <InputMask\r\n    mask=\"+7 (999) 999-9999\"\r\n    maskChar=\" \"\r\n    value={props.value}\r\n    onChange={props.onChange}>\r\n    {(inputProps) => (\r\n      <Input\r\n        {...inputProps}\r\n        //className=\"info__name\"\r\n        label=\"Телефон\"\r\n        type=\"tel\"\r\n        floatingLabel={true}\r\n        required={true}\r\n      />\r\n    )}\r\n  </InputMask>\r\n);\r\n\r\nclass Order extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"order\">\r\n        <Select\r\n          className=\"order__branch\"\r\n          name=\"branch\"\r\n          label=\"Филиал:\"\r\n          defaultValue=\"option1\"\r\n          required={true}\r\n        >\r\n          <Option value=\"option1\" label=\"Автоматически\" />\r\n          <Option value=\"option2\" label=\"Фрунзе, 40\" />\r\n        </Select>\r\n        {this.props.showAll && (\r\n          <div>\r\n            <p className=\"order__msg order__msg_warning\">\r\n              Мы не смогли найти дом, уточните пожалуйста его на карте.\r\n            </p>\r\n            <p className=\"order__msg order__msg_danger\">\r\n              Найдено несколько адресов, выберите корректный ниже и при необходимости уточните на карте.\r\n            </p>\r\n            <p className=\"order__msg order__msg_danger\">\r\n              К сожалению, мы не смогли найти адрес на карте города, попробуйте заново!\r\n            </p>\r\n          </div>\r\n        )}\r\n        {(this.props.showAll || !this.props.variant2) && (\r\n          <form className=\"address\" id=\"address\">\r\n            <legend className=\"address__desc\">Адрес доставки:</legend>\r\n            <Row>\r\n              <Col md=\"8\" xs=\"12\">\r\n                <Input\r\n                  className=\"address__street\"\r\n                  label=\"Улица\"\r\n                  type=\"text\"\r\n                  floatingLabel={true}\r\n                  required={true}\r\n                />\r\n              </Col>\r\n              <Col md=\"4\" xs=\"6\">\r\n                <Input\r\n                  className=\"address__building\"\r\n                  label=\"Дом\"\r\n                  type=\"text\"\r\n                  floatingLabel={true}\r\n                  required={true}\r\n                />\r\n              </Col>\r\n              <Col md=\"4\" xs=\"6\">\r\n                <Input\r\n                  className=\"address__apartment\"\r\n                  label=\"Кв.\"\r\n                  type=\"text\"\r\n                  floatingLabel={true}\r\n                  required={true}\r\n                />\r\n              </Col>\r\n              <Col md=\"4\" xs=\"6\">\r\n                <Input\r\n                  className=\"address__entrance\"\r\n                  label=\"Подъезд\"\r\n                  type=\"text\"\r\n                  floatingLabel={true}\r\n                  required={true}\r\n                />\r\n              </Col>\r\n              <Col md=\"4\" xs=\"6\">\r\n                <Input\r\n                  className=\"address__floor\"\r\n                  label=\"Этаж\"\r\n                  type=\"text\"\r\n                  floatingLabel={true}\r\n                  required={true}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </form>\r\n        )}\r\n        {this.props.showAll && (\r\n          <div className=\"confirm\">\r\n            <Select\r\n              className=\"confirm__options\"\r\n              name=\"options\"\r\n              defaultValue=\"option1\"\r\n            >\r\n              <Option value=\"option1\" label=\"Омск, улица Ленина, 12\" />\r\n              <Option value=\"option2\" label=\"село Пушкино, улица Ленина, 12\" />\r\n              <Option value=\"option3\" label=\"разъезд Левобережный, улица Ленина, 12\" />\r\n              <Option value=\"option4\" label=\"поселок Омский, улица Ленина, 12\" />\r\n              <Option value=\"option5\" label=\"село Троицкое, улица Ленина, 12\" />\r\n              <Option value=\"option6\" label=\"посёлок Новоомский, улица Ленина, 12\" />\r\n              <Option value=\"option7\" label=\"поселок Иртышский, улица Ленина, 12\" />\r\n              <Option value=\"option8\" label=\"Омск, площадь Ленина\" />\r\n            </Select>\r\n            <Button\r\n              className=\"confirm__btn-submit\"\r\n              size=\"small\"\r\n              variant=\"raised\"\r\n            >\r\n              Рассчитать\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {(this.props.showAll || !this.props.variant2) && (\r\n          <Button form=\"address\" className=\"address__btn-submit\" variant=\"raised\">\r\n            Найти адрес\r\n          </Button>\r\n        )}\r\n        {(this.props.showAll || this.props.variant2) && (\r\n          <div className=\"info\">\r\n            <form id=\"info\">\r\n              <Row>\r\n                <Col md=\"6\" xs=\"6\">\r\n                  <Input\r\n                    className=\"info__name\"\r\n                    label=\"Имя\"\r\n                    type=\"text\"\r\n                    floatingLabel={true}\r\n                    required={true}\r\n                  />\r\n                </Col>\r\n                <Col md=\"6\" xs=\"6\">\r\n                  <TelInput />\r\n                </Col>\r\n                <Col md=\"6\" xs=\"6\">\r\n                  <Input\r\n                    //className=\"info__name\"\r\n                    label=\"Цена заказа\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    floatingLabel={true}\r\n                    required={true}\r\n                  />\r\n                </Col>\r\n                <Col md=\"6\" xs=\"6\">\r\n                  <Input\r\n                    //className=\"info__name\"\r\n                    label=\"Иметь сдачу с\"\r\n                    type=\"number\"\r\n                    min=\"100\"\r\n                    floatingLabel={true}\r\n                    required={true}\r\n                  />\r\n                </Col>\r\n                <Col md=\"12\" xs=\"12\">\r\n                  <Textarea\r\n                    className=\"info__comment\"\r\n                    label=\"Комментарий\"\r\n                    rows=\"2\"\r\n                    floatingLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n            <p className=\"info__price\">\r\n              Стоимость доставки: <span>99</span>&nbsp;руб.\r\n            </p>\r\n            <p className=\"info__time\">\r\n              Приблизительное время доставки: <span>16:46 (через 45&nbsp;мин.)</span>\r\n            </p>\r\n            <p className=\"info__arriving\">\r\n              Время прибытия в ресторан: <span>16:17 (через 16&nbsp;мин.)</span>\r\n            </p>\r\n            <p className=\"info__length\">\r\n              Общая длина маршрута: <span>1</span>&nbsp;км\r\n            </p>\r\n            <Row>\r\n              <Col md=\"8\" xs=\"8\">\r\n                <Button\r\n                  form=\"info\"\r\n                  className=\"info__btn-submit\"\r\n                  size=\"small\"\r\n                  variant=\"raised\"\r\n                >\r\n                  Отправить\r\n                </Button>\r\n              </Col>\r\n              <Col md=\"4\" xs=\"4\">\r\n                <Button\r\n                  className=\"info__btn-back\"\r\n                  size=\"small\"\r\n                  variant=\"raised\"\r\n                  color=\"danger\"\r\n                >\r\n                  Назад\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport Collapse, { Panel } from 'rc-collapse';\r\nimport 'rc-collapse/assets/index.css';\r\nimport './History.sass';\r\n\r\nclass History extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"history\">\r\n        <h3>Заказы</h3>\r\n        <Collapse>\r\n          <Panel header=\"№ 9088373\" headerClass=\"history__header\">\r\n            <p className=\"history__date\">\r\n              от <b>01.09.2019 22:29</b>\r\n            </p>\r\n            <p className=\"history__address\">Ленина, д. 14</p>\r\n            <span className=\"history__price\">Стоимость:&nbsp;<b>150&nbsp;р. </b></span>\r\n            <span className=\"history__delivery-price\">Доставка:&nbsp;<b>0&nbsp;р.</b></span>\r\n          </Panel>\r\n          <Panel header=\"№\" headerClass=\"history__header\">Данные заказа</Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;","import React from 'react';\nimport './FoodBoy.sass';\n//import CommonMenu from './components/CommonMenu/CommonMenu';\nimport User from './components/User/User';\nimport Order from './components/Order/Order';\nimport History from \"./components/History/History\";\n\nclass FoodBoy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleVariant2Change = this.handleVariant2Change.bind(this);\n    this.handleEverythingChange = this.handleEverythingChange.bind(this);\n    this.state = {\n      isVariant2: false,\n      showAll: false,\n    };\n  }\n\n  handleVariant2Change(e) {\n    this.setState({\n      isVariant2: e.target.checked,\n    });\n  }\n\n  handleEverythingChange(e) {\n    this.setState({\n      showAll: e.target.checked,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"food-boy\">\n        <header className=\"header\">\n          {/*<CommonMenu\n            mode=\"horizontal\"\n            openAnimation=\"slide-up\"\n            triggerSubMenuAction=\"click\"\n          />*/}\n          <User\n            onVariant2Change={this.handleVariant2Change}\n            onEverythingChange={this.handleEverythingChange}\n          />\n        </header>\n        <main className=\"main\">\n          <aside className=\"panel\">\n            <h1 className=\"panel__heading\">Разместить заказ</h1>\n            <Order variant2={this.state.isVariant2} showAll={this.state.showAll} />\n            <History />\n          </aside>\n          <div className=\"inner-container\"></div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default FoodBoy;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. FoodBoy is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport FoodBoy from './FoodBoy';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <FoodBoy />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}